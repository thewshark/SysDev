-- TRIGGERS *****************************************************************************

--********************* tr_MSS_msdcp_insert ************************************

DROP TRIGGER TR_MSSCLI_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSCLI_CHECK_DUPLICATE ON MSCLI INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Cod VARCHAR(30)
	DECLARE @CliCount INT

	SELECT @Cod = CLICOD FROM INSERTED
	SELECT @CliCount = Count(*) FROM MSCLI(nolock) WHERE CLICOD = @Cod
	IF @CliCount > 0
		DELETE FROM MSCLI WHERE CLICOD = @Cod

	INSERT INTO MSCLI SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSCLI_CHECK_DUPLICATE ************************************

--********************* TR_MSSAGD_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSAGD_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSAGD_CHECK_DUPLICATE ON MSAGD INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Stamp VARCHAR(30)
	DECLARE @AgdCount INT

	SELECT @Stamp = AGDSTP FROM INSERTED
	SELECT @AgdCount = Count(*) FROM MSAGD(nolock) WHERE AGDSTP = @Stamp
	IF @AgdCount > 0
		DELETE FROM MSAGD WHERE AGDSTP = @Stamp

	INSERT INTO MSAGD SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSAGD_CHECK_DUPLICATE ************************************

--********************* TR_MSSLCE_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSLCE_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSLCE_CHECK_DUPLICATE ON MSLCE INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @CodCli VARCHAR(30)
	DECLARE @CodLce VARCHAR(20)
	DECLARE @LceCount INT

	SELECT @CodCli = LCECOD, @CodLce = LCELCE FROM INSERTED
	SELECT @LceCount = Count(*) FROM MSLCE(nolock) WHERE LCECOD = @CodCli AND LCELCE = @CodLce
	IF @LceCount > 0
		DELETE FROM MSLCE WHERE LCECOD = @CodCli AND LCELCE = @CodLce

	INSERT INTO MSLCE SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSLCE_CHECK_DUPLICATE ************************************

--********************* TR_MSSCRT_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSCRT_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSCRT_CHECK_DUPLICATE ON MSCRT INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @CodRota VARCHAR(30)
	DECLARE @CodSRota VARCHAR(30)
	DECLARE @CodCli VARCHAR(30)
	DECLARE @CrtCount INT

	SELECT @CodRota = CRTROT, @CodSRota = CRTSBT, @CodCli = CRTCLI FROM INSERTED
	SELECT @CrtCount = Count(*) FROM MSCRT(nolock) WHERE CRTROT = @CodRota AND CRTSBT = @CodSRota AND CRTCLI = @CodCli
	IF @CrtCount > 0
		DELETE FROM MSCRT WHERE CRTROT = @CodRota AND CRTSBT = @CodSRota AND CRTCLI = @CodCli

	INSERT INTO MSCRT SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSCRT_CHECK_DUPLICATE ************************************

--********************* TR_MSSCNT_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSCNT_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSCNT_CHECK_DUPLICATE ON MSCNT INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @CodCli VARCHAR(30)
	DECLARE @CodLce VARCHAR(20)
	DECLARE @CntId VARCHAR(30)
	DECLARE @CntCount INT

	SELECT @CodCli = CNTCLI, @CodLce = CNTLCE, @CntId = CNTCID FROM INSERTED
	SELECT @CntCount = Count(*) FROM MSCNT(nolock) WHERE CNTCLI = @CodCli AND CNTLCE = @CodLce AND CNTCID = @CntId
	IF @CntCount > 0
		DELETE FROM MSCNT WHERE CNTCLI = @CodCli AND CNTLCE = @CodLce AND CNTCID = @CntId

	INSERT INTO MSCNT SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSCNT_CHECK_DUPLICATE ************************************

--********************* TR_MSSDEC_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSDEC_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSDEC_CHECK_DUPLICATE ON MSDEC INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DocExr VARCHAR(30)
	DECLARE @DocTpd VARCHAR(10)
	DECLARE @DocSer VARCHAR(10)
	DECLARE @DocNum INT
	DECLARE @DecCount INT

	SELECT @DocExr = DECEXR, @DocTpd = DECTPD, @DocSer = DECSER, @DocNum = DECNDC FROM INSERTED
	SELECT @DecCount = Count(*) FROM MSDEC(nolock) WHERE DECEXR = @DocExr AND DECTPD = @DocTpd AND DECSER = @DocSer AND DECNDC = @DocNum
	IF @DecCount > 0
		DELETE FROM MSDEC WHERE DECEXR = @DocExr AND DECTPD = @DocTpd AND DECSER = @DocSer AND DECNDC = @DocNum

	INSERT INTO MSDEC SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSDEC_CHECK_DUPLICATE ************************************

--********************* TR_MSSDED_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSDED_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSDED_CHECK_DUPLICATE ON MSDED INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DocExr VARCHAR(30)
	DECLARE @DocTpd VARCHAR(10)
	DECLARE @DocSer VARCHAR(10)
	DECLARE @DocNum INT
	DECLARE @DocLin INT
	DECLARE @DedCount INT

	SELECT @DocExr = DEDEXR, @DocTpd = DEDTPD, @DocSer = DEDSER, @DocNum = DEDNDC, @DocLin = DEDLIN FROM INSERTED
	SELECT @DedCount = Count(*) FROM MSDED(nolock) WHERE DEDEXR = @DocExr AND DEDTPD = @DocTpd AND DEDSER = @DocSer AND DEDNDC = @DocNum AND DEDLIN = @DocLin
	IF @DedCount > 0
		DELETE FROM MSDED WHERE DEDEXR = @DocExr AND DEDTPD = @DocTpd AND DEDSER = @DocSer AND DEDNDC = @DocNum AND DEDLIN = @DocLin

	INSERT INTO MSDED SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSDED_CHECK_DUPLICATE ************************************

--********************* TR_MSSDET_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSDET_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSDET_CHECK_DUPLICATE ON MSDET INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DocExr VARCHAR(30)
	DECLARE @DocTpd VARCHAR(10)
	DECLARE @DocSer VARCHAR(10)
	DECLARE @DocNum INT
	DECLARE @DocLin INT
	DECLARE @DocLil INT
	DECLARE @DetCount INT

	SELECT @DocExr = DETEXR, @DocTpd = DETTPD, @DocSer = DETSER, @DocNum = DETNDC, @DocLin = DETLIN, @DocLil = DETLIL FROM INSERTED
	SELECT @DETCount = Count(*) FROM MSDET(nolock) WHERE DETEXR = @DocExr AND DETTPD = @DocTpd AND DETSER = @DocSer AND DETNDC = @DocNum AND DETLIN = @DocLin AND DETLIL = @DocLil
	IF @DETCount > 0
		DELETE FROM MSDET WHERE DETEXR = @DocExr AND DETTPD = @DocTpd AND DETSER = @DocSer AND DETNDC = @DocNum AND DETLIN = @DocLin AND DETLIL = @DocLil

	INSERT INTO MSDET SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSDED_CHECK_DUPLICATE ************************************

--********************* TR_MSSDIA_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSDIA_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSDIA_CHECK_DUPLICATE ON MSDIA INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DataIni VARCHAR(8)
	DECLARE @HoraIni VARCHAR(6)
	DECLARE @Vnd VARCHAR(50)
	
	DECLARE @DiaCount INT

	SELECT @DataIni = DIADTI, @HoraIni = DIAHRI, @Vnd = DIAVND FROM INSERTED
	SELECT @DiaCount = Count(*) FROM MSDIA(nolock) WHERE DIADTI = @DataIni AND DIAHRI = @HoraIni AND DIAVND = @Vnd
	IF @DiaCount > 0
		DELETE FROM MSDIA WHERE DIADTI = @DataIni AND DIAHRI = @HoraIni AND DIAVND = @Vnd

	INSERT INTO MSDIA SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSDIA_CHECK_DUPLICATE ************************************

--********************* TR_MSSEQC_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSEQC_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSEQC_CHECK_DUPLICATE ON MSEQC INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @EqcCod VARCHAR(30)
	
	DECLARE @EqcCount INT

	SELECT @EqcCod = EQCCOD FROM INSERTED
	SELECT @EqcCount = Count(*) FROM MSEQC(nolock) WHERE EQCCOD = @EqcCod
	IF @EqcCount > 0
		DELETE FROM MSEQC WHERE EQCCOD = @EqcCod

	INSERT INTO MSEQC SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSEQC_CHECK_DUPLICATE ************************************

--********************* TR_MSSSBD_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSBD_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSBD_CHECK_DUPLICATE ON MSSBD INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SbdStamp VARCHAR(30)
	
	DECLARE @SbdCount INT

	SELECT @SbdStamp = SBDSTP FROM INSERTED
	SELECT @SbdCount = Count(*) FROM MSSBD(nolock) WHERE SBDSTP = @SbdStamp
	IF @SbdCount > 0
		DELETE FROM MSSBD WHERE SBDSTP = @SbdStamp

	INSERT INTO MSSBD SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSBD_CHECK_DUPLICATE ************************************

--********************* TR_MSSSCL_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSCL_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSCL_CHECK_DUPLICATE ON MSSCL INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SclExr VARCHAR(30)
	DECLARE @SclSer VARCHAR(10)
	DECLARE @SclNum INT
	DECLARE @SclLin INT
	
	DECLARE @SclCount INT

	SELECT @SclExr = SCLEXR, @SclSer = SCLSER, @SclNum = SCLNDC, @SclLin = SCLLIN FROM INSERTED
	SELECT @SclCount = Count(*) FROM MSSCL(nolock) WHERE SCLEXR = @SclExr AND SCLSER = @SclSer AND SCLNDC = @SclNum AND SCLLIN = @SclLin
	IF @SclCount > 0
		DELETE FROM MSSCL WHERE SCLEXR = @SclExr AND SCLSER = @SclSer AND SCLNDC = @SclNum AND SCLLIN = @SclLin

	INSERT INTO MSSCL SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSCL_CHECK_DUPLICATE ************************************

--********************* TR_MSSSIT_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSIT_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSIT_CHECK_DUPLICATE ON MSSIT INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SitExr VARCHAR(30)
	DECLARE @SitSer VARCHAR(10)
	DECLARE @SitNum INT
	DECLARE @SitLin INT
	
	DECLARE @SitCount INT

	SELECT @SitExr = SITEXR, @SitSer = SITSER, @SitNum = SITNDC, @SitLin = SITLIN FROM INSERTED
	SELECT @SitCount = Count(*) FROM MSSIT(nolock) WHERE SITEXR = @SitExr AND SITSER = @SitSer AND SITNDC = @SitNum AND SITLIN = @SitLin
	IF @SitCount > 0
		DELETE FROM MSSIT WHERE SITEXR = @SitExr AND SITSER = @SitSer AND SITNDC = @SitNum AND SITLIN = @SitLin

	INSERT INTO MSSIT SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSIT_CHECK_DUPLICATE ************************************

--********************* TR_MSSSEQ_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSEQ_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSEQ_CHECK_DUPLICATE ON MSSEQ INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SeqExr VARCHAR(30)
	DECLARE @SeqSer VARCHAR(10)
	DECLARE @SeqNum INT
	DECLARE @SeqLin INT
	
	DECLARE @SeqCount INT

	SELECT @SeqExr = SEQEXR, @SeqSer = SEQSER, @SeqNum = SEQNDC, @SeqLin = SEQLIN FROM INSERTED
	SELECT @SeqCount = Count(*) FROM MSSEQ(nolock) WHERE SEQEXR = @SeqExr AND SEQSER = @SeqSer AND SEQNDC = @SeqNum AND SEQLIN = @SeqLin
	IF @SeqCount > 0
		DELETE FROM MSSEQ WHERE SEQEXR = @SeqExr AND SEQSER = @SeqSer AND SEQNDC = @SeqNum AND SEQLIN = @SeqLin

	INSERT INTO MSSEQ SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSIT_CHECK_DUPLICATE ************************************

--********************* TR_MSSSLN_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSLN_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSLN_CHECK_DUPLICATE ON MSSLN INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SlnExr VARCHAR(30)
	DECLARE @SlnSer VARCHAR(10)
	DECLARE @SlnNum INT
	DECLARE @SlnLEqp INT
	DECLARE @SlnLin INT
	DECLARE @SlnLLote INT
	
	DECLARE @SlnCount INT

	SELECT @SlnExr = SLNEXR, @SlnSer = SLNSER, @SlnNum = SLNNDC, @SlnLEqp = SLNLEQ, @SlnLin = SLNLIN, @SlnLLote = SLNLIL FROM INSERTED
	SELECT @SlnCount = Count(*) FROM MSSLN(nolock) WHERE SLNEXR = @SlnExr AND SLNSER = @SlnSer AND SLNNDC = @SlnNum AND SLNLEQ = @SlnLEqp AND SLNLIN = @SlnLin AND SLNLIL = @SlnLLote
	IF @SlnCount > 0
		DELETE FROM MSSLN WHERE SLNEXR = @SlnExr AND SLNSER = @SlnSer AND SLNNDC = @SlnNum AND SLNLEQ = @SlnLEqp AND SLNLIN = @SlnLin AND SLNLIL = @SlnLLote

	INSERT INTO MSSLN SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSLN_CHECK_DUPLICATE ************************************

--********************* TR_MSSSMT_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSMT_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSMT_CHECK_DUPLICATE ON MSSMT INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SmtExr VARCHAR(30)
	DECLARE @SmtSer VARCHAR(10)
	DECLARE @SmtNum INT
	DECLARE @SmtLEqp INT
	DECLARE @SmtLin INT
	
	DECLARE @SmtCount INT

	SELECT @SmtExr = SMTEXR, @SmtSer = SMTSER, @SmtNum = SMTNDC, @SmtLEqp = SMTLEQ, @SmtLin = SMTLIN FROM INSERTED
	SELECT @SmtCount = Count(*) FROM MSSMT(nolock) WHERE SMTEXR = @SmtExr AND SMTSER = @SmtSer AND SMTNDC = @SmtNum AND SMTLEQ = @SmtLEqp AND SMTLIN = @SmtLin
	IF @SmtCount > 0
		DELETE FROM MSSMT WHERE SMTEXR = @SmtExr AND SMTSER = @SmtSer AND SMTNDC = @SmtNum AND SMTLEQ = @SmtLEqp AND SMTLIN = @SmtLin

	INSERT INTO MSSMT SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSMT_CHECK_DUPLICATE ************************************

--********************* TR_MSSSRV_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSSRV_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSSRV_CHECK_DUPLICATE ON MSSRV INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @SrvExr VARCHAR(30)
	DECLARE @SrvSer VARCHAR(10)
	DECLARE @SrvNum INT
	
	DECLARE @SrvCount INT

	SELECT @SrvExr = SRVEXR, @SrvSer = SRVSER, @SrvNum = SRVNDC FROM INSERTED
	SELECT @SrvCount = Count(*) FROM MSSRV(nolock) WHERE SRVEXR = @SrvExr AND SRVSER = @SrvSer AND SRVNDC = @SrvNum
	IF @SrvCount > 0
		DELETE FROM MSSRV WHERE SRVEXR = @SrvExr AND SRVSER = @SrvSer AND SRVNDC = @SrvNum

	INSERT INTO MSSRV SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSSRV_CHECK_DUPLICATE ************************************

--********************* TR_MSSTU1_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSTU1_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSTU1_CHECK_DUPLICATE ON MSTU1 INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Tu1Ku1 VARCHAR(100)
	DECLARE @Tu1Ku2 VARCHAR(100)
	DECLARE @Tu1Ku3 VARCHAR(100)
	DECLARE @Tu1Ku4 VARCHAR(100)
	
	DECLARE @Tu1Count INT

	SELECT @Tu1Ku1 = TU1KU1, @Tu1Ku2 = TU1KU2, @Tu1Ku3 = TU1KU3, @Tu1Ku4 = TU1KU4 FROM INSERTED
	SELECT @Tu1Count = Count(*) FROM MSTU1(nolock) WHERE TU1KU1 = @Tu1Ku1 AND TU1KU2 = @Tu1Ku2 AND TU1KU3 = @Tu1Ku3 AND TU1KU4 = @Tu1Ku4
	IF @Tu1Count > 0
		DELETE FROM MSTU1 WHERE TU1KU1 = @Tu1Ku1 AND TU1KU2 = @Tu1Ku2 AND TU1KU3 = @Tu1Ku3 AND TU1KU4 = @Tu1Ku4

	INSERT INTO MSTU1 SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSTU1_CHECK_DUPLICATE ************************************

--********************* TR_MSSTU2_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSTU2_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSTU2_CHECK_DUPLICATE ON MSTU2 INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Tu2Ku1 VARCHAR(100)
	DECLARE @Tu2Ku2 VARCHAR(100)
	DECLARE @Tu2Ku3 VARCHAR(100)
	DECLARE @Tu2Ku4 VARCHAR(100)
	
	DECLARE @Tu2Count INT

	SELECT @Tu2Ku1 = TU2KU1, @Tu2Ku2 = TU2KU2, @Tu2Ku3 = TU2KU3, @Tu2Ku4 = TU2KU4 FROM INSERTED
	SELECT @Tu2Count = Count(*) FROM MSTU2(nolock) WHERE TU2KU1 = @Tu2Ku1 AND TU2KU2 = @Tu2Ku2 AND TU2KU3 = @Tu2Ku3 AND TU2KU4 = @Tu2Ku4
	IF @Tu2Count > 0
		DELETE FROM MSTU2 WHERE TU2KU1 = @Tu2Ku1 AND TU2KU2 = @Tu2Ku2 AND TU2KU3 = @Tu2Ku3 AND TU2KU4 = @Tu2Ku4

	INSERT INTO MSTU2 SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSTU2_CHECK_DUPLICATE ************************************

--********************* TR_MSSTU3_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSTU3_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSTU3_CHECK_DUPLICATE ON MSTU3 INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Tu3Ku1 VARCHAR(100)
	DECLARE @Tu3Ku2 VARCHAR(100)
	DECLARE @Tu3Ku3 VARCHAR(100)
	DECLARE @Tu3Ku4 VARCHAR(100)
	DECLARE @Tu3Ku5 INT
	DECLARE @Tu3Ku6 INT
	DECLARE @Tu3Ku7 INT
	DECLARE @Tu3Ku8 INT
	
	DECLARE @Tu3Count INT

	SELECT @Tu3Ku1 = TU3KU1, @Tu3Ku2 = TU3KU2, @Tu3Ku3 = TU3KU3, @Tu3Ku4 = TU3KU4, @Tu3Ku5 = TU3KU5, @Tu3Ku6 = TU3KU6, @Tu3Ku7 = TU3KU7, @Tu3Ku8 = TU3KU8 FROM INSERTED
	SELECT @Tu3Count = Count(*) FROM MSTU3(nolock) WHERE TU3KU1 = @Tu3Ku1 AND TU3KU2 = @Tu3Ku2 AND TU3KU3 = @Tu3Ku3 AND TU3KU4 = @Tu3Ku4 AND TU3KU5 = @Tu3Ku5 AND TU3KU6 = @Tu3Ku6 AND TU3KU7 = @Tu3Ku7 AND TU3KU8 = @Tu3Ku8
	IF @Tu3Count > 0
		DELETE FROM MSTU3 WHERE TU3KU1 = @Tu3Ku1 AND TU3KU2 = @Tu3Ku2 AND TU3KU3 = @Tu3Ku3 AND TU3KU4 = @Tu3Ku4 AND TU3KU5 = @Tu3Ku5 AND TU3KU6 = @Tu3Ku6 AND TU3KU7 = @Tu3Ku7 AND TU3KU8 = @Tu3Ku8

	INSERT INTO MSTU3 SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSTU3_CHECK_DUPLICATE ************************************

--********************* TR_MSSTU4_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSTU4_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSTU4_CHECK_DUPLICATE ON MSTU4 INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @Tu4Ku1 VARCHAR(100)
	DECLARE @Tu4Ku2 VARCHAR(100)
	DECLARE @Tu4Ku3 VARCHAR(100)
	DECLARE @Tu4Ku4 VARCHAR(100)
	DECLARE @Tu4Ku5 INT
	DECLARE @Tu4Ku6 INT
	DECLARE @Tu4Ku7 INT
	DECLARE @Tu4Ku8 INT
	
	DECLARE @Tu4Count INT

	SELECT @Tu4Ku1 = TU4KU1, @Tu4Ku2 = TU4KU2, @Tu4Ku3 = TU4KU3, @Tu4Ku4 = TU4KU4, @Tu4Ku5 = TU4KU5, @Tu4Ku6 = TU4KU6, @Tu4Ku7 = TU4KU7, @Tu4Ku8 = TU4KU8 FROM INSERTED
	SELECT @Tu4Count = Count(*) FROM MSTU4(nolock) WHERE TU4KU1 = @Tu4Ku1 AND TU4KU2 = @Tu4Ku2 AND TU4KU3 = @Tu4Ku3 AND TU4KU4 = @Tu4Ku4 AND TU4KU5 = @Tu4Ku5 AND TU4KU6 = @Tu4Ku6 AND TU4KU7 = @Tu4Ku7 AND TU4KU8 = @Tu4Ku8
	IF @Tu4Count > 0
		DELETE FROM MSTU4 WHERE TU4KU1 = @Tu4Ku1 AND TU4KU2 = @Tu4Ku2 AND TU4KU3 = @Tu4Ku3 AND TU4KU4 = @Tu4Ku4 AND TU4KU5 = @Tu4Ku5 AND TU4KU6 = @Tu4Ku6 AND TU4KU7 = @Tu4Ku7 AND TU4KU8 = @Tu4Ku8

	INSERT INTO MSTU4 SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSTU4_CHECK_DUPLICATE ************************************

--********************* TR_MSSOPO_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSOPO_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSOPO_CHECK_DUPLICATE ON MSOPO INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @OpoExr VARCHAR(30)
	DECLARE @OpoSer VARCHAR(10)
	DECLARE @OpoNum INT
	
	DECLARE @OpoCount INT

	SELECT @OpoExr = OPOEXR, @OpoSer = OPOSER, @OpoNum = OPONDC FROM INSERTED
	SELECT @OpoCount = Count(*) FROM MSOPO(nolock) WHERE OPOEXR = @OpoExr AND OPOSER = @OpoSer AND OPONDC = @OpoNum
	IF @OpoCount > 0
		DELETE FROM MSOPO WHERE OPOEXR = @OpoExr AND OPOSER = @OpoSer AND OPONDC = @OpoNum

	INSERT INTO MSOPO SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSOPO_CHECK_DUPLICATE ************************************

--********************* TR_MSSOPL_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSOPL_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSOPL_CHECK_DUPLICATE ON MSOPL INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @OplExr VARCHAR(30)
	DECLARE @OplSer VARCHAR(10)
	DECLARE @OplNum INT
	DECLARE @OplLin INT
	
	DECLARE @OplCount INT

	SELECT @OplExr = OPLEXR, @OplSer = OPLSER, @OplNum = OPLNDC, @OplLin = OPLLIN FROM INSERTED
	SELECT @OplCount = Count(*) FROM MSOPL(nolock) WHERE OPLEXR = @OplExr AND OPLSER = @OplSer AND OPLNDC = @OplNum AND OPLLIN = @OplLin
	IF @OplCount > 0
		DELETE FROM MSOPL WHERE OPLEXR = @OplExr AND OPLSER = @OplSer AND OPLNDC = @OplNum AND OPLLIN = @OplLin

	INSERT INTO MSOPL SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSOPL_CHECK_DUPLICATE ************************************

--********************* // TR_MSSDPS_CHECK_DUPLICATE ************************************
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP TRIGGER [dbo].[TR_MSSDPS_CHECK_DUPLICATE]
GO

CREATE TRIGGER [dbo].[TR_MSSDPS_CHECK_DUPLICATE] ON [dbo].[MSDPS] INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DpsExr VARCHAR(30)
	DECLARE @DpsSer VARCHAR(10)
	DECLARE @DpsNum INT
	DECLARE @DpsCount INT

	SELECT @DpsExr = DPSEXR, @DpsSer = DPSSER, @DpsNum = DPSNUM FROM INSERTED
	SELECT @DpsCount = Count(*) FROM MSDPS(nolock) WHERE DPSEXR = @DpsExr AND DPSSER = @DpsSer AND DPSNUM = @DpsNum
	IF @DpsCount > 0
		DELETE FROM MSDPS WHERE DPSEXR = @DpsExr AND DPSSER = @DpsSer AND DPSNUM = @DpsNum

	INSERT INTO MSDPS SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSDPS_CHECK_DUPLICATE ************************************

--********************* TR_MSSVIS_CHECK_DUPLICATE ************************************
DROP TRIGGER TR_MSSVIS_CHECK_DUPLICATE 
GO

CREATE TRIGGER TR_MSSVIS_CHECK_DUPLICATE ON MSVIS INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @DataIni VARCHAR(8)
	DECLARE @HoraIni VARCHAR(6)
	DECLARE @Vnd VARCHAR(50)
	
	DECLARE @DiaCount INT

	SELECT @DataIni = VISDTI, @HoraIni = VISHRI, @Vnd = VISVND FROM INSERTED
	SELECT @DiaCount = Count(*) FROM MSVIS(nolock) WHERE VISDTI = @DataIni AND VISHRI = @HoraIni AND VISVND = @Vnd
	IF @DiaCount > 0
		DELETE FROM MSVIS WHERE VISDTI = @DataIni AND VISHRI = @HoraIni AND VISVND = @Vnd

	INSERT INTO MSVIS SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSVIS_CHECK_DUPLICATE ************************************