-- Creating the MSFOT table
CREATE table MSFOT (
	FOTEXR VARCHAR(60),
	FOTTPD VARCHAR(20),
	FOTSER VARCHAR(20),
	FOTNDC INT,
	FOTLIN INT,
	FOTLIL INT,
	FOTFIC VARCHAR(200),
	FOTDAT VARCHAR(16),
	FOTHOR VARCHAR(12),
	FOTACL VARCHAR(4000),
	FOTTER INT,
	FOTVND VARCHAR(50)  NULL ,
	FOTSYNCR VARCHAR(1) NULL ,
	FOTTIPO VARCHAR(1) null,
	FOTTERM BIGINT null
); 
CREATE UNIQUE INDEX WDIDX_MSFOT_FOTK01 ON MSFOT (FOTEXR,FOTTPD,FOTSER,FOTNDC,FOTLIN,FOTLIL,FOTVND);
CREATE INDEX WDIDX_MSFOT_FOTVND ON MSFOT (FOTVND);
CREATE INDEX WDIDX_MSFOT_FOTSYNCR ON MSFOT (FOTSYNCR);

--********************* TR_MSSFOT_CHECK_DUPLICATE ************************************
CREATE TRIGGER TR_MSSFOT_CHECK_DUPLICATE ON MSFOT INSTEAD OF INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @FOTEXR VARCHAR(60)
	DECLARE @FOTTPD VARCHAR(20)
	DECLARE @FOTSER VARCHAR(20)
	DECLARE @FOTNDC INT
	DECLARE @FOTLIN INT
	DECLARE @FOTLIL INT
	DECLARE @FOTVND VARCHAR(50) 
	
	DECLARE @Count INT

	SELECT @FOTEXR = FOTEXR, @FOTTPD = FOTTPD, @FOTSER = FOTSER, @FOTNDC = FOTNDC, @FOTLIN = FOTLIN, @FOTLIL = FOTLIL, @FOTVND = FOTVND FROM INSERTED
	SELECT @Count = Count(*) FROM MSFOT(nolock) WHERE FOTEXR = @FOTEXR AND FOTTPD = @FOTTPD AND FOTSER = @FOTSER AND FOTNDC = @FOTNDC AND FOTLIN = @FOTLIN AND FOTLIL = @FOTLIL AND FOTVND = @FOTVND
	IF @Count > 0
		DELETE FROM MSFOT WHERE FOTEXR = @FOTEXR AND FOTTPD = @FOTTPD AND FOTSER = @FOTSER AND FOTNDC = @FOTNDC AND FOTLIN = @FOTLIN AND FOTLIL = @FOTLIL AND FOTVND = @FOTVND

	INSERT INTO MSFOT SELECT * FROM INSERTED
END
GO
--********************* // TR_MSSFOT_CHECK_DUPLICATE ************************************


